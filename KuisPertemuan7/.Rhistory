url1 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/Kuis2_data.csv"
essay <- read.csv(url1)
essay
d_words <- essay[, 1] - essay[, 3]
d_verbs <- essay[, 2] - essay[, 4]
d_essay <- cbind(d_words, d_verbs)
as.data.frame(d_essay)
dbar_essay <- colMeans(d_essay)
dbar_essay
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dEssay <- cbind(d_words, d_verbs)
dEssay
dbar_essay <- colMeans(d_essay)
dbar_essay
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dEssay <- cbind(dWords, dVerbs)
dEssay
dbaressay <- colMeans(dessay)
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dessay <- cbind(dWords, dVerbs)
dessay
dbaressay <- colMeans(dessay)
dbaressay
library(openxlsx)
library(car)
library(MVN)
url1 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/Kuis2_data.csv"
essay <- read.csv(url1)
essay
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dessay <- cbind(dWords, dVerbs)
dessay
dbaressay <- colMeans(dessay)
dbaressay
S_essay <- cov(d_essay)
Sessay <- cov(dessay)
Sessay
T2 <- t(dbaressay) %*% solve(Sessay) %*% (dbaressay)
T2
pessay <- 2
nessay <- nrow(dessay)
alphaessay = 1 - 0.05
C2 <- (((nessay - 1) * pessay)/((nessay - pessay) * nessay)) * qf(p = alphaessay, df1 = pessay, df2 = nessay - pessay)
C2
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-alphaessay
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-0.05
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
pessay <- 2
nessay <- nrow(dessay)
alphaessay = 0.05
C2 <- (((nessay - 1) * pessay)/((nessay - pessay) * nessay)) * qf(p = 1 - alphaessay, df1 = pessay, df2 = nessay - pessay)
C2
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-alphaessay
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
#fatal
n <- nrow(dessay)
p <- ncol(dessay)
dbar <- colMeans(dessay)
Sd <- cov(dessay)
tconst <- sqrt((p/n)*((n-1)/(n-p)) * qf(1-alphaessay,p,n-p))
id <- c(1,2)
plot(ellipse(center=dbar[id], shape=Sd[id,id], radius=tconst, draw=F),type="n", xlab="d1", ylab="d2", ylim = c(-4, 0), xlim = c(-35, 0))
lines(ellipse(center=dbar[id], shape=Sd[id,id], radius=tconst, lwd=3), xlab="d1", ylab="d2")
points(0, 0,col="red", pch = 16)
text(0, -0.2,expression(delta))
text(dbar[1]+0.8,dbar[2]+0.2,expression(bar(d)))
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-alphaessay
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
bon <- NULL
alpha3 <- 1 - (0.05/(2*p))
for(k in 1:2){
bon <- c(bon, dbar[k] - sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1), dbar[k] + sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1))
}
rtab <- rbind(bon)
round(rtab, 2)
#load data
url2 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/testIq.csv"
Iq <- read.csv(url2)
#load data
url2 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/testIq.csv"
Iq <- read.csv(url2)
Iq
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grup_C <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grup_C
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grup_C <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grup_T <- Iq[c(10:18), c("Baca", "Hitung", "IQ")]
grup_C
grup_T
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grup_C <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grup_T <- Iq[c(10:18), c("Baca", "Hitung", "IQ")]
print(paste("data group C"))
grup_C
print(paste("data group T"))
grup_T
xbar_grupC <- colMeans(grup_C)
xbar_grupC
xbar_grupT <- colMeans(grup_T)
xbar_grupT
S_grupC <- cov(grup_C)
S_grupT <- cov(grup_T)
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grupC <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grupT <- Iq[c(10:18), c("Baca", "Hitung", "IQ")]
print(paste("data group C"))
grupC
print(paste("data group T"))
grupT
xbargrupC <- colMeans(grupC)
xbargrupC
xbargrupT <- colMeans(grupT)
xbargrupT
SgrupC <- cov(grupC)
SgrupT <- cov(grupT)
print(paste("kovarians group C"))
SgrupC
print(paste("kovarians group T"))
SgrupT
ngrupC <- nrow(grupC)
ngrupT <- nrow(grupT)
Spooled <- (1/(ngrupC + ngrupT - 2)) * (((ngrupC - 1) * SgrupC) + ((ngrupT - 1) * SgrupT))
Spooled
T2_grup <- t(xbargrupC - xbargrupT) %*% solve(((1/ngrupC) + (1/ngrupT)) * Spooledgrup) %*% (xbargrupC - xbargrupT)
T2_grup <- t(xbargrupC - xbargrupT) %*% solve(((1/ngrupC) + (1/ngrupT)) * Spooled) %*% (xbargrupC - xbargrupT)
T2_grup
pgrup <- 3
alphagrup <- 0.05
C2_grup <- (((ngrupC + ngrupT - 2) * pgrup)/(ngrupC + ngrupT - pgrup - 1)) * qf(p = 1-alpha_grup, df1 = pgrup, df2 = ngrupC + ngrupT - pgrup - 1)
pgrup <- 3
alphagrup <- 0.05
C2_grup <- (((ngrupC + ngrupT - 2) * pgrup)/(ngrupC + ngrupT - pgrup - 1)) * qf(p = 1-alphagrup, df1 = pgrup, df2 = ngrupC + ngrupT - pgrup - 1)
C2_grup
bon_grup <- NULL
alpha_bon <- 1 - (0.05/(2 * p_grup))
bon_grup <- NULL
alpha_bon <- 1 - (0.05/(2 * pgrup))
for (k in c(1:3)) {
bon_grup <- c(bon_grup, (xbargrupC[k] - xbargrupT[k]) - qt(p = alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]), (xbargrupC[k] - xbargrupT[k]) + qt(p = alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]))
}
rtab <- rbind(bon_grup)
round(rtab, 3)
library(openxlsx)
library(car)
library(MVN)
url1 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/Kuis2_data.csv"
essay <- read.csv(url1)
essay
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dessay <- cbind(dWords, dVerbs)
dessay
dbaressay <- colMeans(dessay)
dbaressay
Sessay <- cov(dessay)
Sessay
T2 <- t(dbaressay) %*% solve(Sessay) %*% (dbaressay)
T2
pessay <- 2
nessay <- nrow(dessay)
alphaessay = 0.05
C2 <- (((nessay - 1) * pessay)/((nessay - pessay) * nessay)) * qf(p = 1 - alphaessay, df1 = pessay, df2 = nessay - pessay)
C2
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-alphaessay
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
bon <- NULL
alpha3 <- 1 - (0.05/(2*p))
for(k in 1:2){
bon <- c(bon, dbar[k] - sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1), dbar[k] + sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1))
}
bon <- NULL
alpha3 <- 1 - (0.05/(2*p))
for(k in 1:2){
bon <- c(bon, dbaressay[k] - sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1), dbaressay[k] + sqrt(Sd[k,k]/n) * qt(alpha3, df=n-1))
}
bon <- NULL
alpha3 <- 1 - (0.05/(2*p))
for(k in 1:2){
bon <- c(bon, dbaressay[k] - sqrt(S[k,k]/n) * qt(alpha3, df=n-1), dbaressay[k] + sqrt(S[k,k]/n) * qt(alpha3, df=n-1))
}
rtab <- rbind(bon)
round(rtab, 2)
bon_grup <- NULL
alpha_bon <- (0.05/(2 * pgrup))
#load data
url2 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/testIq.csv"
Iq <- read.csv(url2)
Iq
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grupC <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grupT <- Iq[c(10:18), c("Baca", "Hitung", "IQ")]
print(paste("data group C"))
grupC
print(paste("data group T"))
grupT
baca_C <- c(90, 85, 80, 70, 85, 78, 65, 80, 72)
baca_T <- c(15, 98, 107, 100, 105, 95, 89, 100, 90)
hitung_C <- c(92, 95, 81, 80, 68, 82, 62, 70, 73)
hitung_T <- c(108, 105, 98, 105, 95, 98, 78, 85, 95)
iq_C <- c(108, 115, 95, 100, 99, 105, 101, 95, 102)
iq_T <- c(110, 102, 100, 115, 98, 100, 99, 102, 100)
grup_C <- cbind(baca_C, hitung_C, iq_C)
grup_T <- cbind(baca_T, hitung_T, iq_T)
xbargrupC <- colMeans(grupC)
xbargrupC
xbargrupT <- colMeans(grupT)
xbargrupT
SgrupC <- cov(grupC)
SgrupT <- cov(grupT)
print(paste("kovarians group C"))
SgrupC
print(paste("kovarians group T"))
SgrupT
ngrupC <- nrow(grupC)
ngrupT <- nrow(grupT)
Spooled <- (1/(ngrupC + ngrupT - 2)) * (((ngrupC - 1) * SgrupC) + ((ngrupT - 1) * SgrupT))
Spooled
T2_grup <- t(xbargrupC - xbargrupT) %*% solve(((1/ngrupC) + (1/ngrupT)) * Spooled) %*% (xbargrupC - xbargrupT)
T2_grup
pgrup <- 3
alphagrup <- 0.05
C2_grup <- (((ngrupC + ngrupT - 2) * pgrup)/(ngrupC + ngrupT - pgrup - 1)) * qf(p = 1-alphagrup, df1 = pgrup, df2 = ngrupC + ngrupT - pgrup - 1)
C2_grup
bon_grup <- NULL
alpha_bon <- (0.05/(2 * pgrup))
for (k in c(1:3)) {
bon_grup <- c(bon_grup, (xbargrupC[k] - xbargrupT[k]) - qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]), (xbargrupC[k] - xbargrupT[k]) + qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]))
}
rtab <- rbind(bon_grup)
round(rtab, 3)
set.seed(1000)
mvn(grup_C, mvnTest = "royston")
mvn(grup_T, mvnTest = "royston")
bon_grup <- NULL
alpha_bon <- (0.05/(2 * pgrup))
for (k in c(1:3)) {
bon_grup <- c(bon_grup, (xbargrupC[k] - xbargrupT[k]) - qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]), (xbargrupC[k] - xbargrupT[k]) + qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]))
}
rtab <- rbind(bon_grup)
round(rtab, 3)
library(openxlsx)
library(car)
library(MVN)
url1 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/Kuis2_data.csv"
essay <- read.csv(url1)
essay
dWords <- essay[, 1] - essay[, 3]
dVerbs <- essay[, 2] - essay[, 4]
dessay <- cbind(dWords, dVerbs)
dessay
dbaressay <- colMeans(dessay)
dbaressay
Sessay <- cov(dessay)
Sessay
T2 <- t(dbaressay) %*% solve(Sessay) %*% (dbaressay)
T2
pessay <- 2
nessay <- nrow(dessay)
alphaessay = 0.05
C2 <- (((nessay - 1) * pessay)/((nessay - pessay) * nessay)) * qf(p = 1 - alphaessay, df1 = pessay, df2 = nessay - pessay)
C2
mu <- c(0,0)
X <- dessay
n <- nrow(X)
p <- ncol(X)
xbar <- colMeans(X)
S <- cov(X)
library(car)
alpha<-alphaessay
tconst <- sqrt((p/n)*((n-1)/(n-p)) *
qf(1-alpha,p,n-p))
id <- c(1,2)
plot(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, draw=F),type="n", xlab = "d1", ylab = "d2", xlim = c(-56.4,0.25))
lines(ellipse(center=xbar[id], shape=S[id,id],
radius=tconst, lwd=3))
points(mu[1],mu[2],col="red", pch=16)
text(mu[1]+1.5,mu[2],expression(d[0]))
text(xbar[1]+1.5,xbar[2],expression(bar(d)))
bon <- NULL
alpha3 <- 1 - (0.05/(2*p))
for(k in 1:2){
bon <- c(bon, dbaressay[k] - sqrt(S[k,k]/n) * qt(alpha3, df=n-1), dbaressay[k] + sqrt(S[k,k]/n) * qt(alpha3, df=n-1))
}
rtab <- rbind(bon)
round(rtab, 2)
#load data
url2 <- "https://raw.githubusercontent.com/rii92/tugas-APG/main/KuisPertemuan7/testIq.csv"
Iq <- read.csv(url2)
Iq
setosa <- iris[c(1:50), c("Sepal.Width", "Petal.Width")]
grupC <- Iq[c(1:9), c("Baca", "Hitung", "IQ")]
grupT <- Iq[c(10:18), c("Baca", "Hitung", "IQ")]
print(paste("data group C"))
grupC
print(paste("data group T"))
grupT
baca_C <- c(90, 85, 80, 70, 85, 78, 65, 80, 72)
baca_T <- c(15, 98, 107, 100, 105, 95, 89, 100, 90)
hitung_C <- c(92, 95, 81, 80, 68, 82, 62, 70, 73)
hitung_T <- c(108, 105, 98, 105, 95, 98, 78, 85, 95)
iq_C <- c(108, 115, 95, 100, 99, 105, 101, 95, 102)
iq_T <- c(110, 102, 100, 115, 98, 100, 99, 102, 100)
grup_C <- cbind(baca_C, hitung_C, iq_C)
grup_T <- cbind(baca_T, hitung_T, iq_T)
xbargrupC <- colMeans(grupC)
xbargrupC
xbargrupT <- colMeans(grupT)
xbargrupT
SgrupC <- cov(grupC)
SgrupT <- cov(grupT)
print(paste("kovarians group C"))
SgrupC
print(paste("kovarians group T"))
SgrupT
ngrupC <- nrow(grupC)
ngrupT <- nrow(grupT)
Spooled <- (1/(ngrupC + ngrupT - 2)) * (((ngrupC - 1) * SgrupC) + ((ngrupT - 1) * SgrupT))
Spooled
T2_grup <- t(xbargrupC - xbargrupT) %*% solve(((1/ngrupC) + (1/ngrupT)) * Spooled) %*% (xbargrupC - xbargrupT)
T2_grup
pgrup <- 3
alphagrup <- 0.05
C2_grup <- (((ngrupC + ngrupT - 2) * pgrup)/(ngrupC + ngrupT - pgrup - 1)) * qf(p = 1-alphagrup, df1 = pgrup, df2 = ngrupC + ngrupT - pgrup - 1)
C2_grup
bon_grup <- NULL
alpha_bon <- (0.05/(2 * pgrup))
for (k in c(1:3)) {
bon_grup <- c(bon_grup, (xbargrupC[k] - xbargrupT[k]) - qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]), (xbargrupC[k] - xbargrupT[k]) + qt(p = 1-alpha_bon, df = ngrupC + ngrupT - 2) * sqrt(((1/ngrupC) + (1/ngrupT)) * Spooled[k,k]))
}
rtab <- rbind(bon_grup)
round(rtab, 3)
set.seed(1000)
mvn(grup_C, mvnTest = "royston")
mvn(grup_T, mvnTest = "royston")
set.seed(1000)
mvn(grup_C, mvnTest = "mardia")
mvn(Iq, mvnTest = "mardia")
mvn(Iq, mvnTest = "mardia")
mvn(Iq[, c("Baca", "Hitung", "IQ")], mvnTest = "mardia")
